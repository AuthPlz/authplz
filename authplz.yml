# AuthPlz Example Configuration
# $VARIABLES are loaded from the environment with the specified prefix

# User friendly application name
name: AuthPlz Example

# Server binding configuration
bind-address: $HOST
bind-port: $PORT

# External application address (required for reverse proxying)
external-address: https://authplz.herokuapp.com

# Database connection string
database: $DATABASE_URL

# Allowed origins for API requests
# This is automatically set to bind-address:bind-port or external-address if set but can be overridden here if required
allowed-origins:
  - https://authplz.herokuapp.com
  - https://localhost:3000

# Secrets
cookie-secret: $COOKIE_SECRET
token-secret: $TOKEN_SECRET

# TLS configuration
tls:
#  cert: server.pem 
#  key: server.key
  disabled: true

# Template and static file directories
static-dir: ~/projects/authplz-ui/static
template-dir: ./templates
  
# OAuth (Client) Configuration
# Scopes define what resources an admin or users client can grant access to.
# These are heirachicle and are split by '.' (ie public includes public.read)
# Grants correspond to OAuth grant types that clients can utilise
# Allowed responses defines what responses are allowed for OAuth clients
oauth:
  secret: $OAUTH_SECRET
  admin:
    scopes: ["public.read", "public.write", "private.read", "private.write", "introspect", "offline"]
    grants: ["authorization_code", "implicit", "refresh_token", "client_credentials"]
  user:
    scopes: ["public.read", "public.write", "private.read", "private.write", "offline"]
    grants: ["authorization_code", "implicit", "refresh_token"]
  allowed-responses: ["code", "token", "id_token"]

# Mailer configuration
mailer:
  driver: mailgun 
  options:
    domain:  $MG_DOMAIN 
    address: $MG_ADDRESS 
    key:     $MG_APIKEY 
    secret:  $MG_PRIKEY

# Route configuration
# This allows frontend implementations to set routes for static page redirects
routes:
  user:
    login:    "/#/login"
    logout:   "/#/logout"
    create:   "/#/create"

  account:
    manage:   "/#/account"

  u2f:
    manage:    "/#/2fa-u2f-manage"
    register:  "/#/2fa-u2f-register"
    authorize: "/#/2fa-u2f-authorize"

  totp:
    manage:    "/#/2fa-totp-manage"
    register:  "/#/2fa-totp-register"
    authorize: "/#/2fa-totp-authorize"

  backup:
    manage:    "/#/2fa-backup-manage"
    register:  "/#/2fa-backup-register"
    authorize: "/#/2fa-backup-authorize"

  oauth:
    manage:     "/#/oauth-manage"
    create:     "/#/oauth-create"
    authorize:  "/#/oauth-authorize"
